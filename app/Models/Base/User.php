<?php
/* Model object generated by: Skipper (http://www.skipper18.com) */
/* Do not modify this file manually.*/

namespace App\Models\Base;

use Illuminate\Foundation\Auth\User as Authenticatable;

class User extends Authenticatable
{
    protected $fillable = [
        'username',
        'first_name',
        'last_name',
        'email',
        'password',
        'province_id',
        'city',
        'language',
        'phone',
        'street_addr',
        'postal_code'
    ];
  /**
  * The model's default values for attributes.
  *
  * @var array
  */
  protected $attributes=[
    'encoded_email'=>' ',
    'title'=>' ',
    'city'=>' ',
    'role_id'=> 1,
    'language'=>' ',
    'phone'=>' ',
    'extension'=>' ',
    'mobile'=>' ',
    'street_addr'=>' ',
    'postal_code'=>' ',
    'is_activated'=>0,
    'remember_token'=>' ',
    'activation_code'=>' ',
    'persist_code'=>' ',
    'reset_password_code'=>' ',
    'is_guest'=>1,
    'is_superuser'=>0
  ];
  /**
  * The attributes that should be cast to native types.
  *
  * @var array
  */
  protected $casts=[
    'id'=>'integer',
    'username'=>'string',
    'first_name'=>'string',
    'last_name'=>'string',
    'email'=>'string',
    'encoded_email'=>'string',
    'title'=>'string',
    'province_id'=>'integer',
    'city'=>'string',
    'role_id'=>'integer',
    'language'=>'string',
    'phone'=>'string',
    'extension'=>'string',
    'mobile'=>'string',
    'street_addr'=>'string',
    'postal_code'=>'string',
    'password'=>'string',
    'is_activated'=>'integer',
    'remember_token'=>'string',
    'activation_code'=>'string',
    'persist_code'=>'string',
    'reset_password_code'=>'string',
    'permissions'=>'string',
    'is_guest'=>'integer',
    'is_superuser'=>'integer',
    'last_seen'=>'datetime',
    'activated_at'=>'datetime',
    'last_login'=>'datetime',
    'created_at'=>'datetime',
    'updated_at'=>'datetime',
    'deleted_at'=>'datetime',
    'signature_id'=>'integer'
  ];
  public function role()
  {
    return $this->belongsTo('\App\Models\Role','role_id','id');
  }
  public function province()
  {
    return $this->belongsTo('\App\Models\Province','province_id','id');
  }
  public function signature()
  {
    return $this->belongsTo('\App\Models\Signature','signature_id','id');
  }
  public function userThrottles()
  {
    return $this->hasMany('\App\Models\User_throttle','user_id','id');
  }
  public function userAccessLogs()
  {
    return $this->hasMany('\App\Models\User_access_log','user_id','id');
  }
  public function branches()
  {
    return $this->belongsToMany('\App\Models\Branch','branch_has_users','user_id','branch_id');
  }
  public function permissions()
  {
    return $this->belongsToMany('\App\Models\Permission','user_has_permissions','user_id','permission_id');
  }
  public function branchRoles()
  {
    return $this->belongsToMany('\App\Models\Branch_role','user_has_branch_roles','user_id','branch_role_id');
  }
}
